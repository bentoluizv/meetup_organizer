"""create initial tables

Revision ID: 5605d42cf42f
Revises: 
Create Date: 2024-08-09 13:34:53.297577

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5605d42cf42f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('attendees',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('is_blocked', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('email')
    )
    op.create_table('meetups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('username')
    )
    op.create_table('meetup_with_attendees',
    sa.Column('meetup_id', sa.Integer(), nullable=True),
    sa.Column('attendee_email', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['attendee_email'], ['attendees.email'], ),
    sa.ForeignKeyConstraint(['meetup_id'], ['meetups.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meetup_with_attendees')
    op.drop_table('users')
    op.drop_table('meetups')
    op.drop_table('attendees')
    # ### end Alembic commands ###
